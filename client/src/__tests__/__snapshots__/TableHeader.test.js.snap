// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`when both sortable and filterable renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    currentSort={
        Object {
            "direction": "asc",
            "field": "name",
          }
    }
    header={
        Object {
            "filterable": true,
            "label": "Label",
            "name": "name",
            "sortable": true,
          }
    }
    onFilter={[Function]}
    onSort={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="Sortable"
          onClick={[Function]}
>
          <span>
                    Label
          </span>
          <Unknown
                    name="name"
                    sort={
                              Object {
                                        "direction": "asc",
                                        "field": "name",
                                      }
                    }
          />
</div>,
        <input
          name="name"
          onChange={[Function]}
          placeholder="Search"
          type="text"
/>,
      ],
      "className": "Table-cell Table-cell--header",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span>
              Label
</span>,
            <Unknown
              name="name"
              sort={
                            Object {
                                          "direction": "asc",
                                          "field": "name",
                                        }
              }
/>,
          ],
          "className": "Sortable",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Label",
            },
            "ref": null,
            "rendered": "Label",
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "name": "name",
              "sort": Object {
                "direction": "asc",
                "field": "name",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "name": "name",
          "onChange": [Function],
          "placeholder": "Search",
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="Sortable"
            onClick={[Function]}
>
            <span>
                        Label
            </span>
            <Unknown
                        name="name"
                        sort={
                                    Object {
                                                "direction": "asc",
                                                "field": "name",
                                              }
                        }
            />
</div>,
          <input
            name="name"
            onChange={[Function]}
            placeholder="Search"
            type="text"
/>,
        ],
        "className": "Table-cell Table-cell--header",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span>
                Label
</span>,
              <Unknown
                name="name"
                sort={
                                Object {
                                                "direction": "asc",
                                                "field": "name",
                                              }
                }
/>,
            ],
            "className": "Sortable",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Label",
              },
              "ref": null,
              "rendered": "Label",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "name": "name",
                "sort": Object {
                  "direction": "asc",
                  "field": "name",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "name": "name",
            "onChange": [Function],
            "placeholder": "Search",
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`when filterable renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    currentSort={
        Object {
            "direction": "asc",
            "field": "name",
          }
    }
    header={
        Object {
            "filterable": true,
            "label": "Label",
            "name": "name",
            "sortable": false,
          }
    }
    onFilter={[Function]}
    onSort={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className=""
          onClick={[Function]}
>
          <span>
                    Label
          </span>
</div>,
        <input
          name="name"
          onChange={[Function]}
          placeholder="Search"
          type="text"
/>,
      ],
      "className": "Table-cell Table-cell--header",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span>
              Label
</span>,
            false,
          ],
          "className": "",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Label",
            },
            "ref": null,
            "rendered": "Label",
            "type": "span",
          },
          false,
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "name": "name",
          "onChange": [Function],
          "placeholder": "Search",
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className=""
            onClick={[Function]}
>
            <span>
                        Label
            </span>
</div>,
          <input
            name="name"
            onChange={[Function]}
            placeholder="Search"
            type="text"
/>,
        ],
        "className": "Table-cell Table-cell--header",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span>
                Label
</span>,
              false,
            ],
            "className": "",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Label",
              },
              "ref": null,
              "rendered": "Label",
              "type": "span",
            },
            false,
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "name": "name",
            "onChange": [Function],
            "placeholder": "Search",
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`when neither sortable nor filterable renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    currentSort={
        Object {
            "direction": "asc",
            "field": "name",
          }
    }
    header={
        Object {
            "filterable": false,
            "label": "Label",
            "name": "name",
            "sortable": false,
          }
    }
    onFilter={[Function]}
    onSort={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className=""
          onClick={[Function]}
>
          <span>
                    Label
          </span>
</div>,
        false,
      ],
      "className": "Table-cell Table-cell--header",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span>
              Label
</span>,
            false,
          ],
          "className": "",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Label",
            },
            "ref": null,
            "rendered": "Label",
            "type": "span",
          },
          false,
        ],
        "type": "div",
      },
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className=""
            onClick={[Function]}
>
            <span>
                        Label
            </span>
</div>,
          false,
        ],
        "className": "Table-cell Table-cell--header",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span>
                Label
</span>,
              false,
            ],
            "className": "",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Label",
              },
              "ref": null,
              "rendered": "Label",
              "type": "span",
            },
            false,
          ],
          "type": "div",
        },
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`when sortable renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    currentSort={
        Object {
            "direction": "asc",
            "field": "name",
          }
    }
    header={
        Object {
            "filterable": false,
            "label": "Label",
            "name": "name",
            "sortable": true,
          }
    }
    onFilter={[Function]}
    onSort={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="Sortable"
          onClick={[Function]}
>
          <span>
                    Label
          </span>
          <Unknown
                    name="name"
                    sort={
                              Object {
                                        "direction": "asc",
                                        "field": "name",
                                      }
                    }
          />
</div>,
        false,
      ],
      "className": "Table-cell Table-cell--header",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span>
              Label
</span>,
            <Unknown
              name="name"
              sort={
                            Object {
                                          "direction": "asc",
                                          "field": "name",
                                        }
              }
/>,
          ],
          "className": "Sortable",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Label",
            },
            "ref": null,
            "rendered": "Label",
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "name": "name",
              "sort": Object {
                "direction": "asc",
                "field": "name",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="Sortable"
            onClick={[Function]}
>
            <span>
                        Label
            </span>
            <Unknown
                        name="name"
                        sort={
                                    Object {
                                                "direction": "asc",
                                                "field": "name",
                                              }
                        }
            />
</div>,
          false,
        ],
        "className": "Table-cell Table-cell--header",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span>
                Label
</span>,
              <Unknown
                name="name"
                sort={
                                Object {
                                                "direction": "asc",
                                                "field": "name",
                                              }
                }
/>,
            ],
            "className": "Sortable",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Label",
              },
              "ref": null,
              "rendered": "Label",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "name": "name",
                "sort": Object {
                  "direction": "asc",
                  "field": "name",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
